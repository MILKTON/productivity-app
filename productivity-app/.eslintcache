[{"D:\\Downloads\\productivity-app\\productivity-app\\src\\index.js":"1","D:\\Downloads\\productivity-app\\productivity-app\\src\\reportWebVitals.js":"2","D:\\Downloads\\productivity-app\\productivity-app\\src\\App.js":"3","D:\\Downloads\\productivity-app\\productivity-app\\src\\Components\\Timer.jsx":"4","D:\\Downloads\\productivity-app\\productivity-app\\src\\Components\\Votes.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":693,"mtime":1608504238798,"results":"9","hashOfConfig":"7"},{"size":1534,"mtime":1608504226029,"results":"10","hashOfConfig":"7"},{"size":1247,"mtime":1608503251141,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"166o8qn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":5,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Downloads\\productivity-app\\productivity-app\\src\\index.js",[],["24","25"],"D:\\Downloads\\productivity-app\\productivity-app\\src\\reportWebVitals.js",[],"D:\\Downloads\\productivity-app\\productivity-app\\src\\App.js",[],"D:\\Downloads\\productivity-app\\productivity-app\\src\\Components\\Timer.jsx",["26","27"],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport const Countdown = (props) => {\r\n  const [countdownDate, setCountdownDate] = useState(new Date(new Date().getTime() + (props.tiempo * 60 * 1000)).getTime());\r\n  const [state, setState] = useState({\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setInterval(() => setNewTime(), 1000);\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    if (countdownDate) {\r\n      const currentTime = new Date().getTime();\r\n      const distanceToDate = countdownDate - currentTime;\r\n      console.log(\"countdownDate\"+countdownDate);\r\n      console.log(\"currentTime\"+currentTime);\r\n      let hours = Math.floor(\r\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n      );\r\n      let minutes = Math.floor(\r\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n      );\r\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n\r\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n      if (numbersToAddZeroTo.includes(hours)) {\r\n        hours = `0${hours}`;\r\n      } else if (numbersToAddZeroTo.includes(minutes)) {\r\n        minutes = `0${minutes}`;\r\n      } else if (numbersToAddZeroTo.includes(seconds)) {\r\n        seconds = `0${seconds}`;\r\n      }\r\n\r\n      setState({ hours: hours, minutes, seconds });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='time'>{state.hours || '00'}:{state.minutes || '00'}:{state.seconds || '00'}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Countdown;\r\n","D:\\Downloads\\productivity-app\\productivity-app\\src\\Components\\Votes.jsx",["28","29","30","31","32","33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":25,"nodeType":"41","messageId":"42","endLine":4,"endColumn":41},{"ruleId":"43","severity":1,"message":"44","line":13,"column":6,"nodeType":"45","endLine":13,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":12,"column":22,"nodeType":"49","messageId":"50","endLine":12,"endColumn":24},{"ruleId":"51","severity":2,"message":"52","line":13,"column":17,"nodeType":"41","messageId":"53","endLine":13,"endColumn":35},{"ruleId":"43","severity":1,"message":"54","line":23,"column":12,"nodeType":"45","endLine":23,"endColumn":29,"suggestions":"55"},{"ruleId":"56","severity":2,"message":"57","line":29,"column":18,"nodeType":"58","endLine":29,"endColumn":33},{"ruleId":"51","severity":2,"message":"59","line":29,"column":40,"nodeType":"41","messageId":"53","endLine":29,"endColumn":49},{"ruleId":"56","severity":2,"message":"57","line":34,"column":18,"nodeType":"58","endLine":34,"endColumn":33},{"ruleId":"51","severity":2,"message":"60","line":34,"column":40,"nodeType":"41","messageId":"53","endLine":34,"endColumn":51},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setCountdownDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNewTime'. Either include it or remove the dependency array.","ArrayExpression",["63"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-undef","'questionApiService' is not defined.","undef","React Hook useEffect has a missing dependency: 'item.id'. Either include it or remove the dependency array.",["64"],"react/jsx-no-undef","'FontAwesomeIcon' is not defined.","JSXIdentifier","'faCaretUp' is not defined.","'faCaretDown' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [setNewTime]",{"range":"69","text":"70"},"Update the dependencies array to be: [votes, itemType, item.id]",{"range":"71","text":"72"},[388,390],"[setNewTime]",[749,766],"[votes, itemType, item.id]"]